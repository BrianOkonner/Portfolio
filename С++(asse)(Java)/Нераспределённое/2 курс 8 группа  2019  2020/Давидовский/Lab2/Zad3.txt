package com.company;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        Integer[] arr;
        int quan = 0, num, num_copy, mem, single = -1;
        Scanner sc = new Scanner(System.in);

        System.out.println("Введите число");

        num = sc.nextInt();
        num_copy = num;

        while (num_copy >= 1) {
            quan++;
            num_copy = num_copy / 10;
        }

        num_copy = num;
        arr = new Integer[quan];

        for (int i = 0; i < quan; i++) {

            arr[i] = num_copy % 10;
            num_copy = num_copy / 10;
        }

        Arrays.sort(arr, 0, quan, new Sort());
        num = 0;

        for (int i = 0, k = 1, q = 0, k2 = 1; i < quan; i += 2, k *= 10) {

            if (i == quan - 1) {

                if (single == -1) {
                    single = 0;
                }

                single = single + k2 * arr[i];
                k2 *= 10;
                i--;
                q--;
            } else {
                if (arr[i] != arr[i + 1]) {

                    if (single == -1) {
                        single = 0;
                    }

                    single = single + k2 * arr[i];
                    k2 *= 10;
                    i--;
                    q++;
                }
            }

            if (q == 2) {
                k = k / 10;
                q++;
            }

            if (i + 2 >= quan) {

                if ((q == 3) || (q == 0)) {
                    num = num + k * arr[i];
                    q++;
                }

                if (((quan % 2 == 0) && (single == -1)) || ((quan % 2 != 0) && (single != -1))) {

                    if (single >= 10) {
                        System.out.println("Из числа невозможно составить палиндром.");
                        return;
                    }

                    if (q != -1) {
                        k *= 10;
                    }

                    if (single != -1) {
                        num = num + k * single;
                        k *= 10;
                    } else {
                        i++;
                    }

                    while (i > 0) {

                        num = num + k * arr[i];
                        i -= 2;
                        k *= 10;
                    }

                } else {

                    if (single >= 0) {
                        System.out.println("Из числа невозможно составить палиндром.");
                        return;
                    }

                    k *= 10;
                    if (single != -1) {
                        num = num + k * single;
                        k *= 10;
                    } else {
                        i--;
                    }

                    while (i > 0) {

                        num = num + k * arr[i];
                        i -= 2;
                        k *= 10;
                    }
                }
                break;
            } else {

                if (q == 1) {
                    q++;
                } else {

                    num = num + k * arr[i];
                }
            }
        }
        System.out.println("Палиндром = " + num);

    }
}

class Sort implements Comparator<Integer> {
    @Override
    public int compare(Integer P1, Integer P2) {
        int p1 = P1;
        int p2 = P2;

        if (p1 == p2) {
            return 0;
        }

        if (p1 > p2) {
            return -1;
        }

        return 1;
    }
}
