//найти кратчайший путь из лабиринта(начало в правом верхнем углу, конечные координаты вводятся!)

package javaapplication3;
import java.util.Arrays;
import java.util.Scanner;
import java.io.*;

public class JavaApplication3 {
  public static boolean ProvMove(int[][] m,int t,int k)
  {
      if((m[t+1][k]==0)&&(m[t-1][k]==0)&&(m[t][k+1]==0)&&(m[t][k-1]==0))
      {
          return false;
      }
      return true;
  }
  public static void Izm(int[][] m,int t,int k,int nachx,int nachy,int d)
  {
     if((m[t+1][k]==1)&&(t+1!=nachx)&&(k!=nachy))
        m[t+1][k]=d+1;
               if((m[t-1][k]==1)&&(t-1!=nachx)&&(k!=nachy))
        m[t-1][k]=d+1;
       if((m[t][k+1]==1)&&(t!=nachx)&&(k+1!=nachy))
        m[t][k+1]=d+1;
        if((m[t][k-1]==1)&&(t!=nachx)&&(k-1!=nachy))
        m[t][k-1]=d+1;
  }
    public static void main(String[] args) {
        try{
            
            Scanner sc1=new Scanner(System.in);
            System.out.println("Введите координаты финиша(строка,столбец): ");
            int y=sc1.nextInt();
            int x=sc1.nextInt();
            
      int  A = 11;
	int  B = 11;
int[][] Lab=new int[A][B];
FileInputStream pv=new FileInputStream("Input.txt");
Scanner sc=new Scanner(pv);
for(int i=0;i<A;i++)
    for(int j=0;j<B;j++)
    {
        Lab[i][j]=sc.nextInt();
    }
for(int i=0;i<A;i++)
{
    for(int j=0;j<B;j++)
    {
        System.out.print(Lab[i][j]+" ");
    }
System.out.println();
}
int pokazatelb=0;
int d=1;
Lab[1][1]=1;
if(Lab[1][2]!=0)
    Lab[1][2]=d+1;
if(Lab[2][1]!=0)
   Lab[2][1]=d+1;
d++;
if(ProvMove(Lab,y,x)==true)
{
while(pokazatelb==0){
    if(d<100){
   for(int i=1;i<11;i++)
   {
       for(int j=1;j<11;j++)
       {
           if((Lab[i][j]==d)&&(ProvMove(Lab,i,j)==true))
               Izm(Lab,i,j,1,1,d);
           if(Lab[y][x]==d)
           {
               pokazatelb=1;
           break;}
       }
       if (pokazatelb==1)
           break;
   }
  d++;}
    else
    {pokazatelb=2;
        break;}
}
if(pokazatelb==1)
{
System.out.println("Действие алгоритма");
for(int i=0;i<A;i++)
{
    for(int j=0;j<B;j++)
    {
        System.out.print(Lab[i][j]+" ");
    }
System.out.println();
}
String[] F=new String[d-2];
int len=F.length-1;
int s=y;
int k=x;
while(d!=2)
{
    if((Lab[s-1][k]==Lab[s][k]-1)||((s==1)&&(k==1)))
    {
        s--;
        F[len]="вниз";
        len--;
        d--;
        continue;}
    if((Lab[s+1][k]==Lab[s][k]-1)||((s==1)&&(k==1)))
    {
        s++;
        F[len]="вверх";
        len--;
        d--;
        continue;}
    if((Lab[s][k-1]==Lab[s][k]-1)||((s==1)&&(k==1)))
    {
        k--;
         F[len]="вправо";
        len--;
        d--;
        continue;}
}
System.out.println("Кратчайший путь от начала: ");
for(int i=0;i<F.length;i++)
    System.out.print(F[i]+" ");
System.out.println();}
else
{
     System.out.println("Пути нету!");
}
}
else
    System.out.println("Пути нету!");
        }
       catch(IOException e)
        {
            System.out.println("Ошибка");
     }
    }
    
}
