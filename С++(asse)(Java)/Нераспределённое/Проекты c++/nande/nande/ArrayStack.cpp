/*																ArrayStack
	Программу написал Владислав Владимирович Перевязчиков.( Специальность: прикладная матнмематика. Группа 8)
	Алгоритм :Делаем стек через 0 как бы делаем ограниитель(сделано чтобы можно было повторки кидать) т есть и размерность массива на 1 больше т есть на вершине 0
а за ним наш топ и все остальное
	Тесты:
Первый стек: 8 11 11 11 11 11 11 8
Второй стек(скопированный): 8 11 11 11 11 11 11 8*/
#include "ArrayStack.h"
ArrayStack::ArrayStack(const int& _size)
{
	size = _size;
	p = new int[_size+1];
	p[0]=0;//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
	top = p[0];
}
ArrayStack::ArrayStack(const ArrayStack& s)
{
	int i;
	size = s.size;
	p = new int[s.size+1];
	for (i = 0; s.p[i]!=0; i++)//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
		p[i] = s.p[i];
	p[i]=0;//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
	if(i!=0)
		top = p[i-1];
	else
		top = p[i];
}
ArrayStack::~ArrayStack()
{
	delete p;
}
void ArrayStack::push(const int& n)
{
	int i=0;
	for (i = 0;p[i]!=0; i++);//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
	p[i] = n;
	p[i+1]=0;//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
 	top = p[i];
}
int ArrayStack::pop()
{
	int i,buf;
	for (i = 0;p[i] !=0; i++);//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
	buf=p[i-1];
	p[i-1]=0;//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
	top = p[i-2];
	return buf;
}
bool ArrayStack::isEmpty()
{ 
	if(p[0]==0)
		return true;
	else
		return false;
}
bool ArrayStack::isFull()
{
	int i;
	for (i = 0;p[i]!=0; i++);//ноль можно заменить на любое имло еоторое мы не будем пихать в стек
	if (i == (size))
		return true;
	else return false;
}