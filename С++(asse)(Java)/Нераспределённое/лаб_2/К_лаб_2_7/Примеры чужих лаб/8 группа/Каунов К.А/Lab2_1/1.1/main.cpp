/*
Каунов Кирилл
1 курс
8 группа

Задано выражение(инфиксная форма, например(5 + 45)*(55 - 5))  содержащее числа(любого типа),
знаки операций, круглые скобки.Записать его в виде обратной польской записи (постфиксная форма) и вычислить его значение.

Алгоритм:
1.Выpажение сканиpyется слева напpаво, пpи этом pазбивая его  на  числа и знаки аpифметических опеpаций.
2.Числа записываются в строку том же порядке, в каком встречаются в     исходном  выражении.
3.Найденный текущий символ арифметической 	операции сравнивается с операцией из стека.
4.Все операции с пpиоpитетом выше или pавным текyщемy выталкиваем из стека
 и пишем в выходнyю стpокy(выполнение опеpаций с одинаковым пpиоpитетом  бyдет пpоизводиться слева напpаво).
5.Если пpиоpитет текyщей операции ниже находяйщейся в стеке или стек пустой, символ операции заносится в стек.
6.Открывающая скобка заносится в стек.Считается, что ее приоритет ниже приоритета всех
 арифметических операций.При нахождении закрывающей  скобки все содержимое стека до первой
  открывающей скобки удаляется и записывается в строку.Открывающая скобка удаляется из стека и в строку не записывается.
7. Когда достигнyт конец входного выpажения, выталкиваем из стека все что в нем есть в строку.
8.Вычисление производится в обратном порядке
9. В стек заносим числа, пока не встретим знак операции.Выполняем операцию над двумя числами
 из стека и результат заносим в стек
10.Процесс завершается когда стек пустой
Вычесление:
Рассматриваем поочередно каждый символ :
1.Если очередной символ входной строки - число, то кладем его в стек.
2.Если очередной символ - знак операции, то извлекаем из стека два верхних числа,
используем их в качестве операндов для этой операции, затем кладем результат обратно в стек.
Когда вся входная строка будет разобрана в стеке должно остаться одно число, которое и будет результатом данного выражения.


Тесты:
2*(3+2)
Польская запись: 232+*
Результат вычисления: 10

2+3*(4/2)+6*2
Польская запись: 2342/*+62*+
Результат вычисления: 20

Работает только с цифрами
*/

#include"MyFunc.h"
stack <char> sc;
stack <int> si;
int main()
{
    setlocale(LC_ALL,".1251");
	char str[81]; char rez[81]; rez[0] = '\0';
	for (int k = 0; k < 81; k++)
            rez[k] = '\0';

	cin.getline(str, 81);
	int count = strlen(str);
	int j = 0;
	int i = 0;

	while (count != 0)
	{
		char tmp = str[i];
		if (IfCif(str[i]))
		{
			rez[j] = tmp; j++;
		}
		else
			if (str[i] != ')'&&str[i] != '(')
			{
				{
					if (sc.empty() || (prior(sc.top()) < prior(str[i])))
						sc.push(tmp);
					else
					{
						while (!sc.empty() && (prior(sc.top()) >= prior(str[i])))
						{
							char tmp1 = sc.top();
							sc.pop();
							rez[j] = tmp1; j++;
						}
						sc.push(str[i]);
					}
				}
			}
		if (str[i] == '(')
			sc.push(str[i]);
		if (str[i] == ')')
		{
			while (sc.top() != '(')
			{
				rez[j] = sc.top(); j++;
				sc.pop();
			}
			sc.pop();
		}
		count--;
		i++;
	}
	while (!sc.empty())
	{
		rez[j] = sc.top(); j++;
		sc.pop();
	}
	cout <<"Польская запись: " << rez << endl;
	i = 0;
	count = strlen(rez);
	while (count)
	{
		if (IfCif(rez[i]))
		{
			si.push(toi(rez[i]));
		}
		else
		{
			int tmp1 =si.top();
			si.pop();
			int tmp2 = si.top();
			si.pop();
			int tmp3 = oper(tmp1, tmp2, rez[i]);
			si.push(tmp3);
		}
		count--;
		i++;
	}
	int res = si.top();
	cout << "Результат вычисления: " <<  res << endl;
	system("pause");
	return 0;
}
