/*Мацкевич Максим ПМ 8
Имеется план местности, разбитой на квадраты, заданный матрицей размером M x N. 
Каждый квадрат имеет одно из обозначений :  0, если в квадрате твёрдая почва, и -1,
если в квадрате болото. Необходимо определить, имеется ли в маршрут робота из позиции (ХС, УС)
в позицию (ХФ, УФ), если робот может двигаться только по ровной местности
и только в горизонтальном и вертикальном направлениях.  
При этом вдоль границ квадратов двигаться нельзя.

Решение:
1)Делаем  проверку исходной точки - старта робота, и конечной - финиша,
не являются ли они координатами болота. 
Если это так - нет смысла искать маршрут.
2)Делаем цикл в котором будем искать все клетки на которые 
может попасть робот и помечать их еденицой
(вытаскиваем координаты элемета из 2-х списков и проверяем соседние клетки на равенство 0.
Если 0 то заносим координаты клетки в 2 списка(x и y)         )
3)Работаем пока список не пустой.

Тесты
3 3    //n m                      No
0 0    //x0 y0
2 2     //x1 y1
0 0 -1   //План местности
-1 0 -1
0 -1 0

3 3    //n m                      Yes
0 0    //x0 y0
2 2     //x1 y1
0 0 -1   //План местности
-1 0 -1
0  0  0


*/
#include <fstream>
#include <iostream>
#include "List.h"
using namespace std;
int main()
{cout<<"hello";
List A,B;
int i,j,n,m,**a,x0,y0,x1,y1,x,y;
ifstream in("input.txt");
in>>m>>n;
in>>x0>>y0>>x1>>y1;
a=new int* [m];
for ( i=0; i<m; i++)
{
 a[i]=new int [n];
 for (j=0; j<n; j++)
 in>>a[i][j];
}

if ( a[x0][y0] || a[x1][y1]) 
{
cout<<"No"; 
system("pause");
return 0;
}
A.Push_front(x0);
B.Push_front(y0);
a[x0][y0]=1;
bool f=1;
while (!A.isEmpty())
{
x=A.Pop_back();
y=B.Pop_back();
  if ( (x+1)<m && !a[x+1][y]  ) 
  {
   a[x+1][y]=1;
   A.Push_front(x+1);
   B.Push_front(y);
  }

  if ((x-1)>=0  && !a[x-1][y]  )
  {
   a[x-1][y]=1;
   A.Push_front(x-1);
   B.Push_front(y);
  }

 if ( (y+1)<n && !a[x][y+1] ) 
  {
	  a[x][y+1]=1;
   A.Push_front(x);
   B.Push_front(y+1);
  }

  if ( (y-1)>=0 && !a[x][y-1]  ) 
  {
	  a[x][y-1]=1;
   A.Push_front(x);
   B.Push_front(y-1);
  }

}
if (a[x1][y1]==1) cout<<"Yes";
else cout<<"No";
system("pause");
return 0;
}
