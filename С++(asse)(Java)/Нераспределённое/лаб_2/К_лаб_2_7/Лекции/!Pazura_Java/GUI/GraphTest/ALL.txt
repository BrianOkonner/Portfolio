import javax.swing.JFrame;

public class GraphTest {
	public static void main(String[] args) {
		MainFrame mf = new MainFrame();
		mf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mf.show();		
	}
}

import java.awt.Container;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.geom.Point2D;
import java.util.ArrayList;

import javax.swing.JFrame;


public class MainFrame extends JFrame {
	public MainFrame() throws HeadlessException {
		super();
		setSize(WIDTH, HEIGHT);
		setLocation((int)(Toolkit.getDefaultToolkit().getScreenSize().width/2 - WIDTH/2),
					(int)(Toolkit.getDefaultToolkit().getScreenSize().height/2 - HEIGHT/2));
		setTitle("Test frame");
		
		Container content = getContentPane();
		TestPanel tp = new TestPanel(list, this);
		content.add(tp);
	}
	
	public void addPoint(Point2D p) {
		list.add(p);
		//System.out.println(p.getX() + " " + p.getY());
	}
	
	private final int WIDTH = 300;
	private final int HEIGHT = 300;
	private ArrayList list = new ArrayList();
}
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Point2D;
import java.util.ArrayList;

import javax.swing.JPanel;

class TestPanel extends JPanel {
	public TestPanel(ArrayList aList, MainFrame frame) {
		super();
		list = aList;
		addMouseListener(new MyMouseClick(frame));
	}
	
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		g.drawString("Hello, World!", 100, 100);
		Graphics2D g2 = (Graphics2D)g;
		for(int i=0; i<list.size(); i++) {
			g2.setColor(Color.BLUE);
			int x = (int)((Point2D)(list.get(i))).getX();
			int y = (int)((Point2D)(list.get(i))).getY();
			g.drawRect(x-1, y-1, 3, 3);
		}
	}
	
	private ArrayList list;
	private MainFrame frame;
}
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;

class MyMouseClick extends MouseAdapter {
	public MyMouseClick(MainFrame frame) {
		super();
		this.frame = frame;
	}
	
	public void mouseClicked(MouseEvent e) {
		super.mouseClicked(e);		
		frame.addPoint(new Point2D.Float((float)e.getX(),(float)e.getY()));
		frame.repaint();
	}
	
	private MainFrame frame;
}