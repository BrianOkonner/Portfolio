Бондарчук Владимир
8 группа Сlass Ox


#include iostream
using namespace std;

class OX 
{
	int n;
public
	OX() n(10) {};
	OX(int);
	OX(const OX& a);
	~OX();
	OX& operator = (const OX& a)
 {
		OX b(a);
		cout  Сработал оператор =   endl;;
		return b;
	}
	OX& operator += (const OX& a)
{
		this-n += a.n;
		cout  Сработал оператор +=  endl;
		return this;
	}
	OX& operator -= (const OX& a)
 {
		this-n -= a.n;
		cout  Сработал оператор -=  endl;
		return this;
	}
	OX& operator = (const OX& a) 
{
		this-n = a.n;
		cout  Сработал оператор =  endl;
		return this;
	}
	OX& operator = (const OX& a)
 {
		this-n = a.n;
		cout  Сработал оператор =  endl;
		return this;
	}
	friend OX& operator - (const OX& a, const OX& b)
 {
		OX R(a);
		R -= b;
		cout  Сработал оператор -  endl;
		return R;
	}
	friend OX& operator +(const OX& a, const OX& b)
 {
		OX R(a);
		R += b;
		cout  Сработал оператор +  endl;
		return R;
	}
	friend OX& operator (const OX& a, const OX& b) 
{
		OX R(a);
		R = b;
		cout  Сработал оператор   endl;
		return R;
	}
	friend OX& operator (const OX& a, const OX& b)
 {
		OX R(a);
		R = b;
		cout  Сработал оператор   endl;
		return R;
	}
	friend ostream& operator  (ostream& out, const OX& a) 
{
		out  a.n  endl;
		return out;
	}
	friend istream& operator  (istream& in, OX& a) 
{
		cin  a.n;
		return in;
	}

};

OXOX(int a) 
{
	n = a;
	cout  Сработал констуктор с параметром  endl;
}
OXOX(const OX&a) 
{
	this-n = a.n;
	cout  Сработал констуктор копирования  endl;
}
OX~OX() 
{
	cout  Сработал деструктор  endl;
}


int main() 
{
	setlocale(LC_ALL, rus);
	int z = 15;
	OX a, b(z), c(b), d;
	d = a;
	d += a;
	d -= a;
	d = a;
	OX q;
	q = a + b;
	q = a - b;
	q = a  b;
	q = a  b;
	OX u;
	cout  endl  endl  c  endl;
	cin  u;
	system(pause);
	return 0;
}


