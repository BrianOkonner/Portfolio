package com.company;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

class Car{
    protected final int id;
    protected final String mark;
    protected final String model;
    protected double price;
    protected final int year;
    protected final Type color;
    protected final int number;
    protected static int count = 0;


    public Car(  String mark, String model,double price,int year,Type color,int number){
        count++;
        this.id=count;
        this.mark=mark;
        this.model=model;
        this.price=price;
        this.year=year;
        this.color=color;
        this.number=number;
    }

     Car(Car car){
        count++;
        this.id=count;
        this.mark=car.mark;
        this.model=car.model;
        this.price=car.price;
        this.year=car.year;
        this.color=car.color;
        this.number=car.number;
    }


public int GetId() {
    return id;
}

    public String GetMark() {
        return mark;
    }
    public String GetModel() {
        return model;
    }
    public void SetPrice(double price) {
        this.price = price;
    }
    public double GetPrice() {
        return price;
    }
    public int GetYear() {
        return year;
    }
    public int GetNumber() {
        return number;
    }
    public Type GetType() {
        return color;
    }
    public String toString() {
        return id+" "+mark+" "+model+" "+price+" "+year+" "+color+" "+number;
    }
}
enum Type{
    red,black,green ;
}

class pricecomp implements Comparator<Car>
{
    @Override
    public int compare(Car A,Car B){
        if(A.GetPrice()==B.GetPrice())
            return 0;
        if(A.GetPrice()>B.GetPrice())
            return -1;
        return 1;}
}
class markcomp implements Comparator<Car>
{
    @Override
    public int compare(Car A,Car B)
    {
        return A.GetMark().compareTo(B.GetMark());
    }
}


class Elite extends Car {


    private double koeff ;
    private double percent;

    public Elite(String mark, String model, double price, int year, Type color, int number,
                 double percent,
                 double koeff)

    {
        super(mark, model, price, year, color, number);
        this.percent = percent;
        this.koeff = koeff;
    }


    public Elite(Car car,
                 double percent,
                 double koeff)

    {
        super(car);
        this.percent = percent;
        this.koeff = koeff;
    }

    public double get_percent() {
        return this.percent;
    }

     public void set_percent(double percent) {
        this.percent=percent;
    }

    @Override
    public double GetPrice() {
        return this.koeff * price;
    }

    public double get_koeff() {
        return this.koeff;
    }

    public void set_koeff(double koeff) {
        this.koeff = koeff;
    }

    @Override
    public String toString() {
        return  super.toString() + "  percent:= " + this.percent +
                ", elite price:=" + GetPrice() +  "\n";
    }
}

class Prokat{
    private String name;
    private Car []car;
    public Prokat(String name,  Car[]car)
            //throws wrongYear
     {
        this.name=name;
        this.car=new Car[car.length];
        System.arraycopy(car,0,this.car, 0,car.length);


    }
    public String toString(){
         return "Prokat:"+ this.name+ "\n"+Arrays.toString(this.car);

    }


    public String GetbyYearExpluatation(int n) {
        StringBuffer sb = new StringBuffer();
        for (Car r : this.car)
            if ((2019 - r.GetYear()) > n)
                sb.append(r);
            return sb.toString();
        }

    public String GetbyMorePrice(int  year1, int  price1) {
        StringBuffer sb = new StringBuffer();
        for (Car r : this.car)
            if ((r.GetYear() == year1) && (r.GetPrice() > price1))
                sb.append(r);
            return sb.toString();
    }

    public String GetbyColor(Type color){
        StringBuffer sb=new StringBuffer();
        for (Car r : this.car)
            if(r.GetType()==color)
                sb.append(r);
        return sb.toString();
    }

    public void sortbyprice(){
        Arrays.sort(this.car, new pricecomp());
    }
    public void sortbymark(){
        Arrays.sort(this.car, new markcomp());
    }
}

    public class Main {

        public static void main(String[] args) throws FileNotFoundException {

            FileInputStream fis = new FileInputStream("input.txt");
            Scanner sc = new Scanner(fis);
            Scanner in = new Scanner(System.in);
            PrintStream printFile = new PrintStream("output.txt");

            Car[] car = new Car[7];
            int i = 0;
            while (sc.hasNext()) {
                String str = sc.nextLine();
                String[] a = str.split(" ");

                String mark = a[0];
                String model = a[1];
                double price = Double.parseDouble(a[2]);
                int year = Integer.parseInt(a[3]);
                Type color = Type.valueOf(a[4]);
                int number = Integer.parseInt(a[5]);


                double percent = Double.parseDouble(a[6]);
                double cost = Double.parseDouble(a[7]);

                car[i] = new Elite(mark, model, price, year, color, number, percent, cost);
                System.out.println(car[i].toString());
                i++;
            }


            Prokat p= new Prokat("a",car);System.out.println(p);

           System.out.println("Автомобили красного цвета");
            System.out.println( p.GetbyColor(Type.red) );

            System.out.println("Введите количество лет эксплуатации :");
             int n=in.nextInt();

             System.out.println( p.GetbyYearExpluatation(n) );


            System.out.println("Задайте год выпуска и цену :");
            int  year1=in.nextInt();int  price1=in.nextInt();
            System.out.println( p.GetbyMorePrice(year1,price1) );

            System.out.println("Отсортированый по цене");
            p.sortbyprice();
            System.out.println( p);

            System.out.println("Отсортированый по марке");
            p.sortbymark();
            System.out.println( p);
 
        }
    }
