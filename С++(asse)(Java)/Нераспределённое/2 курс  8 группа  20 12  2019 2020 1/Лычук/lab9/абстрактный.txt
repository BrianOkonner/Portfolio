package com.company;

import java.util.Arrays;
import java.util.Comparator;

abstract class Vector {
    protected int x;
    protected int y;
    protected int z;

    public Vector(int x, int y, int z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }
    public Vector() {
        this.x =0;
        this.y = 0;
        this.z = 0;
    }
     public abstract double Length();
}

class Comp  implements Comparator<Vector> {
    @Override
    public int compare(Vector a,Vector b){
        if(a.Length()==b.Length())
            return 0;
        else if( a.Length()>b.Length())
            return -1;
        else return  1;
    }
}
 class NotBool extends Exception{}
class Algebra extends Vector
{
    public Algebra(int x, int y, int z) {
     super(x,y,z);}
    public int getX(){
        return x;
    }
    public int getY(){
        return y;
    }
    public int getZ(){
        return z;
    }

     public Algebra Mult(Algebra b){
       return new Algebra( y * b.z - z * b.y, (x * b.z - z * b.x)*(-1), x * b.y - y * b.x);  }

     @Override
    public double  Length(){
        return Math.sqrt((double)((x*x)+(y*y)+(z*z)));
    }

     
     public Algebra summ(Algebra b) {
  return new Algebra(x + b.x, y + b.y, z + b.z);

     }

    @Override
    public String toString() {
        StringBuilder s=new StringBuilder();
        s.append(x);s.append(" ");s.append(y); s.append(" ");s.append(z);
        return s.toString();
    }
}


class Boo extends  Vector {
    public Boo(){
        super();
    }
    public Boo(int x,int y, int z) throws NotBool{
        if((x==0||x==1)&&(y==0||y==1)&&(z==0||z==1)){
            this.x=x;
            this.y=y;
            this.z=z;
        }else throw new NotBool();
    }
    public int getX(){
        return x;
    }
    public int getY(){
        return y;
    }
    public int getZ(){
        return z;
    }

    public Boo add(Boo b) throws NotBool{
        int tmp=x+b.getX();
        int tmp2=y+b.getY();
        int tmp3=z+b.getZ();
        if(tmp==2)
            tmp=1;
        if (tmp2==2)
            tmp2=1;
        if(tmp3==2)
            tmp3=1;
        return new Boo(tmp,tmp2, tmp3);
    }

    @Override
    public String toString() {
        StringBuilder s=new StringBuilder();
        s.append(x);s.append(" ");s.append(y); s.append(" ");s.append(z);
        return s.toString();
    }
    @Override
    public double Length(){
      int n=x+y+z;
       return n;
    }


    public void inv(){
        if(x==0)
            x=1;
        else x=0;
        if(y==0)
            y=1;
        else y=0;
        if(z==0)
            z=1;
        else z=0;
    }


    public Boo mult(Boo b)throws NotBool{
        int t1,t2,t3;
        if (x==1 && b.x==1)   t1=1;
        else t1=0;
        if (y==1 && b.y==1)   t2=1;
        else t2=0;
        if (z==1 && b.z==1)   t3=1;
        else t3=0;
        return new Boo(t1,t2, t3);
    }
}
public class Main  {

    public static void main(String[] args) throws NotBool{
        Vector v[]=new  Vector[4];

       Algebra a0= new Algebra(1,1,1);
       Boo a1= new Boo(0,1,1);
       Algebra a2= new Algebra(3,2,2);
       Boo a3= new Boo(0,1,0);
          v[0]= a0;v[1]= a1;v[2]= a2;v[3]= a3;

       Algebra b= new Algebra(1,1,1);
        Algebra c= new Algebra(2,1,3);

        Arrays.sort(v,new Comp());
        for (int i = 0; i <4 ; i++) {
            System.out.println(v[i].toString());
        }
 
        System.out.println("Длина (1,1,1) : "+v[0].Length());

        System.out.println("Сумма: "+ b.summ(a0));

        System.out.println("Произведение: "+ b.Mult(a2));
Boo m= new Boo(0,0,0);
m.inv();System.out.println("Отрицание: "+ m);

        System.out.println("Поразрядное сложение: "+ a1.add(a3));
        System.out.println( "Поразрядное умножение : "+a1.mult(a3));

        System.out.println("Длина : "+ a1.Length());
    }
}
